package com.quagmiresystems.euler;

import java.util.Arrays;

/**
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers
 * are:
 * 
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * 
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not
 * pentagonal.
 * 
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
 * and D = |Pk − Pj| is minimised; what is the value of D?
 */
public class Problem044PentagonNumbers {

  private static final int num = 100_000;

  private static long[] pentagonals = new long[num + 1];

  public static void main(String[] args) {
    initPentagonals();
    boolean found = false;
    int split = 1;
    while (!found) {
      for (int i = 1; i < num - split; i++) {
        long a = pentagonals[i];
        long b = pentagonals[i + split];
        long diff = b - a;
        long sum = a + b;
        if (isPentagonal(diff) && isPentagonal(sum)) {
          System.out.println("a: " + a + " b: " + b + " D: " + (b - a));
          found = true;
          break;
        }
      }
      split++;
    }
  }

  private static void initPentagonals() {
    for (int i = 1; i <= num; i++) {
      pentagonals[i] = pentagonal(i);
    }
  }

  private static long pentagonal(long n) {
    return n * (3 * n - 1) / 2;
  }

  private static boolean isPentagonal(long n) {
    int binarySearch = Arrays.binarySearch(pentagonals, n);
    return binarySearch > -1;
  }

}
